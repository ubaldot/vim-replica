name: unit-tests
on: [push, pull_request]
jobs:
  unit_test:
    name: unit_test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        vim:
          - nightly
          - v9.0.0000
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: '3.12'

      - name: Install jupyter_console
        run: |
          pip install jupyter_console

      - name: Setup Vim
        uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          version: ${{ matrix.vim }}

      - name: Checkout vim-replica plugin code
        uses: actions/checkout@v4

      - name: Run Tests
        run: |
          uname -a
          export VIMPRG=${{ steps.vim.outputs.executable }}
          $VIMPRG --version
          cd test
          source ./run_tests.sh 1


  unit_test_windows:
    name: unit_test_windows
    runs-on: windows-latest
    strategy:
      matrix:
        vim:
          - nightly
          - v9.0.0000

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: '3.12'

      - name: Install jupyter_console
        run: |
          pip install jupyter_console

      - name: Setup Vim
        uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          version: ${{ matrix.vim }}

      - name: Checkout vim-replica plugin code
        uses: actions/checkout@v4

      - name: Run Tests
        run: |
          systeminfo
          echo "Vim command setup."
          $Env:VIMPRG = "${{ steps.vim.outputs.executable }}"
          & $Env:VIMPRG --version
          cd test
          .\run_tests.cmd
